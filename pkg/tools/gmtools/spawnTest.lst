C:/pol2/scripts/include/startEqp.inc, Line 6
var unique_items_created := {};
0: decl global #0
1: array
2: :=
3: #
var starteqp_cfg;
4: decl global #1
5: #
var template;
6: decl global #2
7: #
var magicspawnchance := 0;
8: decl global #3
9: 0L
10: :=
11: #
var magicadjustment  := 0;
12: decl global #4
13: 0L
14: :=
15: #
var making_starting_equipment := 0;
16: decl global #5
17: 0L
18: :=
19: #
var thecritter;
20: decl global #6
21: #
C:\pol2\pkg\tools\gmtools\spawnTest.src, Line 7
var chestarray := {};
22: decl global #7
23: array
24: :=
25: #
C:\pol2\pkg\tools\gmtools\spawnTest.src, Line 9
program spawntest(item)
26: get arg 'item'
var rng := GetObjProperty(item,"range");
27: decl local #1
28: local #0
29: "range"
30: Func(2,1): GetObjProperty
31: :=
32: #
var amt := GetObjProperty(item,"amount");
33: decl local #2
34: local #0
35: "amount"
36: Func(2,1): GetObjProperty
37: :=
38: #
var frq := GetObjProperty(item,"duration");
39: decl local #3
40: local #0
41: "duration"
42: Func(2,1): GetObjProperty
43: :=
44: #
foreach thing in ListItemsNearLocation(cint(item.x), cint(item.y), cint(item.z)
45: local #0
46: get member 'x'
47: Func(0,0): CInt
48: local #0
49: get member 'y'
50: Func(0,0): CInt
51: local #0
52: get member 'z'
53: Func(0,0): CInt
54: local #1
55: Func(0,0): CInt
56: Func(2,23): ListItemsNearLocation
57: initforeach @68
if(GetObjProperty(thing,"link") == item.serial)
58: local #4
59: "link"
60: Func(2,1): GetObjProperty
61: local #0
62: get member 'serial'
63: ==
64: if false goto 68
DestroyItem(thing);
65: local #4
66: Func(2,18): DestroyItem
67: #
68: stepforeach @58
69: leave block(3)
if((!amt) or (!frq))
70: local #2
71: !
72: local #3
73: !
74: ||
75: if false goto 96
print("Chest Spawner " + item.serial + " at: " + item.x + ", " + item.y + " is 
76: "Chest Spawner "
77: local #0
78: get member 'serial'
79: +
80: " at: "
81: +
82: local #0
83: get member 'x'
84: +
85: ", "
86: +
87: local #0
88: get member 'y'
89: +
90: " is improperly configured"
91: +
92: Func(1,0): print
93: #
return;
94: ""
95: progend
var chest, current, thechest, newamt;
96: decl local #4
97: #
98: decl local #5
99: #
100: decl local #6
101: #
102: decl local #7
103: #
CreateTreasureChests(item, amt);
104: local #0
105: local #2
106: makelocal
107: jmp userfunc @175
108: #
while(item)
109: local #0
110: if false goto 138
sleep(frq);
111: local #3
112: Func(3,3): sleep
113: #
CleanArray();
114: makelocal
115: jmp userfunc @140
116: #
current := len(chestarray);
117: global #7
118: Func(0,5): len
119: local5 := 
newamt := CInt(amt - current);
120: local #2
121: local #5
122: -
123: Func(0,0): CInt
124: local7 := 
if(newamt > 0)
125: local #7
126: 0L
127: >
128: if false goto 134
CreateTreasureChests(item, newamt);
129: local #0
130: local #7
131: makelocal
132: jmp userfunc @175
133: #
sleep(frq);
134: local #3
135: Func(3,3): sleep
136: #
137: goto109
138: leave block(8)
139: progend
C:\pol2\pkg\tools\gmtools\spawnTest.src, Line 37
function cleanarray()
var newarray := {};
140: decl local #0
141: array
142: :=
143: #
foreach chest in chestarray
144: global #7
145: initforeach @169
if((chest.locked == 0) || (chest.usescript != ":tinkering:tinkerTraps") || (!ch
146: local #1
147: get member 'locked'
148: 0L
149: ==
150: local #1
151: get member 'usescript'
152: ":tinkering:tinkerTraps"
153: <>
154: ||
155: local #1
156: !
157: ||
158: if false goto 163
DestroyItem(chest);
159: local #1
160: Func(2,18): DestroyItem
161: #
162: goto169
elseif(chest)
163: local #1
164: if false goto 169
newarray.append(chest);
165: local #0
166: local #1
167: Call Method append (1 params)
168: #
169: stepforeach @146
170: leave block(3)
chestarray := newarray;
171: local #0
172: global7 := 
173: 0L
174: return
C:\pol2\pkg\tools\gmtools\spawnTest.src, Line 48
function CreateTreasureChests(item, amt)
175: pop param 'amt'
176: pop param 'item'
var lvl := GetObjProperty(item, "level");
177: decl local #2
178: local #1
179: "level"
180: Func(2,1): GetObjProperty
181: :=
182: #
var rng := GetObjProperty(item, "range");
183: decl local #3
184: local #1
185: "range"
186: Func(2,1): GetObjProperty
187: :=
188: #
var newx, newy, newz, checker, type, gfx, lootgroup, chest, lockid, strength, t
189: decl local #4
190: #
191: decl local #5
192: #
193: decl local #6
194: #
195: decl local #7
196: #
197: decl local #8
198: #
199: decl local #9
200: #
201: decl local #10
202: #
203: decl local #11
204: #
205: decl local #12
206: #
207: decl local #13
208: #
209: decl local #14
210: #
if(rng > 10)
211: local #3
212: 10L
213: >
214: if false goto 217
rng := 10;
215: 10L
216: local3 := 
var total := 0;
217: decl local #15
218: 0L
219: :=
220: #
while(total < amt)
221: local #15
222: local #0
223: <
224: if false goto 421
chest := 0;
225: 0L
226: local11 := 
checker  := 0;
227: 0L
228: local7 := 
while((checker == 0) && (item))
229: local #7
230: 0L
231: ==
232: local #1
233: &&
234: if false goto 310
checker := 0;
235: 0L
236: local7 := 
newx := cint(item.x + RandomInt(rng) - RandomInt(rng));
237: local #1
238: get member 'x'
239: local #3
240: Func(5,0): RandomInt
241: +
242: local #3
243: Func(5,0): RandomInt
244: -
245: Func(0,0): CInt
246: local4 := 
newy := cint(item.y + RandomInt(rng) - RandomInt(rng));
247: local #1
248: get member 'y'
249: local #3
250: Func(5,0): RandomInt
251: +
252: local #3
253: Func(5,0): RandomInt
254: -
255: Func(0,0): CInt
256: local5 := 
newz:= cint(GetWorldHeight(newx, newy));
257: local #4
258: local #5
259: Func(2,24): GetWorldHeight
260: Func(0,0): CInt
261: local6 := 
if(len(ListItemsNearLocation(newx, newy, newz, 0)) == 0)
262: local #4
263: local #5
264: local #6
265: 0L
266: Func(2,23): ListItemsNearLocation
267: Func(0,5): len
268: 0L
269: ==
270: if false goto 306
type := RandomInt(4)+1;
271: 4L
272: Func(5,0): RandomInt
273: 1L
274: +
275: local8 := 
case(type)
276: local #8
277: casejmp
	1: @278
	2: @281
	3: @284
	4: @287
	5: @290
	default: @292
gfx := 3650;
278: 3650L
279: local9 := 
280: goto292
gfx := 3651;
281: 3651L
282: local9 := 
283: goto292
gfx := 3703;
284: 3703L
285: local9 := 
286: goto292
gfx := 3648;
287: 3648L
288: local9 := 
289: goto292
gfx := 3708;
290: 3708L
291: local9 := 
chest := CreateItemAtLocation(newx, newy, newz, gfx, 1);
292: local #4
293: local #5
294: local #6
295: local #9
296: 1L
297: Func(2,25): CreateItemAtLocation
298: local11 := 
if(chest)
299: local #11
300: if false goto 304
checker := 1;
301: 1L
302: local7 := 
303: goto306
checker := 0;
304: 0L
305: local7 := 
sleepms(10);
306: 10L
307: Func(3,4): sleepms
308: #
309: goto229
SetObjProperty(chest,"link", item.serial);
310: local #11
311: "link"
312: local #1
313: get member 'serial'
314: Func(2,3): SetObjProperty
315: #
chest.locked :=  1;
316: local #11
317: 1L
318: set member 'locked' #
chest.movable := 0;
319: local #11
320: 0L
321: set member 'movable' #
chest.usescript := ":tinkering:tinkerTraps";
322: local #11
323: ":tinkering:tinkerTraps"
324: set member 'usescript' #
lockid := AllocLockId();
325: makelocal
326: jmp userfunc @554
327: local12 := 
SetObjProperty(chest, "lockid", lockid);
328: local #11
329: "lockid"
330: local #12
331: Func(2,3): SetObjProperty
332: #
SetObjProperty(chest, "level", lvl);
333: local #11
334: "level"
335: local #2
336: Func(2,3): SetObjProperty
337: #
strength := 0;
338: 0L
339: local13 := 
case(lvl)
340: local #2
341: casejmp
	1: @342
	2: @347
	3: @352
	4: @357
	5: @362
	default: @366
lootgroup := 69;    strength :=  20;
342: 69L
343: local10 := 
strength :=  20;
344: 20L
345: local13 := 
346: goto366
lootgroup := 70;    strength :=  40;
347: 70L
348: local10 := 
strength :=  40;
349: 40L
350: local13 := 
351: goto366
lootgroup := 71;    strength :=  60;
352: 71L
353: local10 := 
strength :=  60;
354: 60L
355: local13 := 
356: goto366
lootgroup := 72;    strength :=  80;
357: 72L
358: local10 := 
strength :=  80;
359: 80L
360: local13 := 
361: goto366
lootgroup := 73;    strength := 100;
362: 73L
363: local10 := 
strength := 100;
364: 100L
365: local13 := 
traptype := RandomInt(10)+1;
366: 10L
367: Func(5,0): RandomInt
368: 1L
369: +
370: local14 := 
if(traptype > 3)
371: local #14
372: 3L
373: >
374: if false goto 378
traptype := 3;
375: 3L
376: local14 := 
377: goto380
traptype := 2;
378: 2L
379: local14 := 
SetObjProperty(chest, "trap_type", (CStr(traptype)));
380: local #11
381: "trap_type"
382: local #14
383: Func(0,4): CStr
384: Func(2,3): SetObjProperty
385: #
SetObjProperty(chest, "LockPickDiff", (strength - RandomInt(20)));
386: local #11
387: "LockPickDiff"
388: local #13
389: 20L
390: Func(5,0): RandomInt
391: -
392: Func(2,3): SetObjProperty
393: #
SetObjProperty(chest, "trap_strength", strength);
394: local #11
395: "trap_strength"
396: local #13
397: Func(2,3): SetObjProperty
398: #
makeloot(chest, lootgroup);
399: local #11
400: local #10
401: makelocal
402: jmp userfunc @423
403: #
CreateFromGroup(chest, lootgroup);
404: local #11
405: local #10
406: makelocal
407: jmp userfunc @571
408: #
chestarray.append(chest);
409: global #7
410: local #11
411: Call Method append (1 params)
412: #
total := total + 1;
413: local #15
414: 1L
415: +
416: local15 := 
sleepms(10);
417: 10L
418: Func(3,4): sleepms
419: #
420: goto221
421: 0L
422: return
C:/pol2/scripts/include/startEqp.inc, Line 15
function MakeLoot(corpse, lootgroup)
423: pop param 'lootgroup'
424: pop param 'corpse'
var npcdesc := ReadConfigFile("::npcdesc");
425: decl local #2
426: "::npcdesc"
427: Func(4,0): ReadConfigFile
428: :=
429: #
var elem := FindConfigElem(npcdesc, corpse.npctemplate);
430: decl local #3
431: local #2
432: local #1
433: get member 'npctemplate'
434: Func(4,1): FindConfigElem
435: :=
436: #
var mprop, madj;
437: decl local #4
438: #
439: decl local #5
440: #
if(elem)
441: local #3
442: if false goto 454
mprop := CInt(GetConfigInt(elem, "Magicitemchance"));
443: local #3
444: "Magicitemchance"
445: Func(4,2): GetConfigInt
446: Func(0,0): CInt
447: local4 := 
madj  := CInt(GetConfigInt(elem, "MagicAdjustment"));
448: local #3
449: "MagicAdjustment"
450: Func(4,2): GetConfigInt
451: Func(0,0): CInt
452: local5 := 
453: goto483
mprop := 1;
454: 1L
455: local4 := 
if(corpse.objtype == 0x9e40)
456: local #1
457: get member 'objtype'
458: 40512L
459: ==
460: if false goto 481
case(CInt(GetObjProperty(corpse,"level")))
461: local #1
462: "level"
463: Func(2,1): GetObjProperty
464: Func(0,0): CInt
465: casejmp
	1: @466
	2: @469
	3: @472
	4: @475
	5: @478
	default: @480
madj := 0;
466: 0L
467: local5 := 
468: goto480
madj := 2;
469: 2L
470: local5 := 
471: goto480
madj := 4;
472: 4L
473: local5 := 
474: goto480
madj := 6;
475: 6L
476: local5 := 
477: goto480
madj := 8;
478: 8L
479: local5 := 
480: goto483
magicadjustment := 0;
481: 0L
482: global4 := 
if(GetHp(corpse))
483: local #1
484: makelocal
485: jmp userfunc @1240
486: if false goto 500
foreach thing in ListEquippedItems(corpse)
487: local #1
488: Func(2,15): ListEquippedItems
489: initforeach @498
if(thing.objtype == 0xe75)
490: local #6
491: get member 'objtype'
492: 3701L
493: ==
494: if false goto 498
corpse := thing;
495: local #6
496: local1 := 
break;
497: goto499
498: stepforeach @490
499: leave block(3)
thecritter := corpse;
500: local #1
501: global6 := 
if(mprop)
502: local #4
503: if false goto 507
magicspawnchance := 1;
504: 1L
505: global3 := 
506: goto522
if((corpse.objtype == 0x9e40) || (corpse.objtype == 0xe40))
507: local #1
508: get member 'objtype'
509: 40512L
510: ==
511: local #1
512: get member 'objtype'
513: 3648L
514: ==
515: ||
516: if false goto 520
magicspawnchance := 1;
517: 1L
518: global3 := 
519: goto522
magicspawnchance := 0;
520: 0L
521: global3 := 
magicadjustment  := madj;
522: local #5
523: global4 := 
starteqp_cfg := ReadConfigFile("::nlootgroup");
524: "::nlootgroup"
525: Func(4,0): ReadConfigFile
526: global1 := 
if(lootgroup)
527: local #0
528: if false goto 535
CreateFromGroup(corpse, lootgroup);
529: local #1
530: local #0
531: makelocal
532: jmp userfunc @571
533: #
534: goto552
var lootgroups := GetConfigStringArray(elem, "lootgroup");
535: decl local #0
536: local #3
537: "lootgroup"
538: Func(4,3): GetConfigStringArray
539: :=
540: #
foreach str in lootgroups
541: local #6
542: initforeach @549
CreateFromGroup(corpse, CInt(str));
543: local #1
544: local #7
545: Func(0,0): CInt
546: makelocal
547: jmp userfunc @571
548: #
549: stepforeach @543
550: leave block(3)
551: leave block(1)
552: 0L
553: return
C:/pol2/scripts/util/key.inc, Line 5
function AllocLockId()
var lockid := GetGlobalProperty( "nextlockid" );
554: decl local #0
555: "nextlockid"
556: Func(2,20): GetGlobalProperty
557: :=
558: #
if (!lockid)
559: local #0
560: if true goto 563
lockid := 1;
561: 1L
562: local0 := 
SetGlobalProperty( "nextlockid", lockid+1 );
563: "nextlockid"
564: local #0
565: 1L
566: +
567: Func(2,21): SetGlobalProperty
568: #
return lockid;
569: local #0
570: return
C:/pol2/scripts/include/startEqp.inc, Line 76
function CreateFromGroup(who, group)
571: pop param 'group'
572: pop param 'who'
if(making_starting_equipment != 1)
573: global #5
574: 1L
575: <>
576: if false goto 580
starteqp_cfg := ReadConfigFile("::nlootgroup");
577: "::nlootgroup"
578: Func(4,0): ReadConfigFile
579: global1 := 
var elem := starteqp_cfg[group];
580: decl local #2
581: global #1
582: local #0
583: [] 1
584: :=
585: #
foreach str in GetConfigStringArray(elem, "Stack")
586: local #2
587: "Stack"
588: Func(4,3): GetConfigStringArray
589: initforeach @595
CreateFromStackString(who, str);
590: local #1
591: local #3
592: makelocal
593: jmp userfunc @1055
594: #
595: stepforeach @590
596: leave block(3)
foreach str in GetConfigStringArray(elem, "Item")
597: local #2
598: "Item"
599: Func(4,3): GetConfigStringArray
600: initforeach @606
CreateFromItemString(who, str);
601: local #1
602: local #3
603: makelocal
604: jmp userfunc @643
605: #
606: stepforeach @601
607: leave block(3)
foreach str in GetConfigStringArray(elem, "Random")
608: local #2
609: "Random"
610: Func(4,3): GetConfigStringArray
611: initforeach @617
CreateFromRandomString(who, str);
612: local #1
613: local #3
614: makelocal
615: jmp userfunc @919
616: #
617: stepforeach @612
618: leave block(3)
foreach str in GetConfigStringArray(elem, "Group")
619: local #2
620: "Group"
621: Func(4,3): GetConfigStringArray
622: initforeach @628
CreateFromGroup(who, str);
623: local #1
624: local #3
625: makelocal
626: jmp userfunc @571
627: #
628: stepforeach @623
629: leave block(3)
foreach str in GetConfigStringArray(elem, "Unique")
630: local #2
631: "Unique"
632: Func(4,3): GetConfigStringArray
633: initforeach @639
CreateFromUniqueString(who, str);
634: local #1
635: local #3
636: makelocal
637: jmp userfunc @1179
638: #
639: stepforeach @634
640: leave block(3)
641: 0L
642: return
C:/pol2/scripts/include/startEqp.inc, Line 103
function CreateFromItemString(who, str)
643: pop param 'str'
644: pop param 'who'
var params := SplitWords(str);
645: decl local #2
646: local #0
647: Func(0,1): SplitWords
648: :=
649: #
var count, objname, color, chance;
650: decl local #3
651: #
652: decl local #4
653: #
654: decl local #5
655: #
656: decl local #6
657: #
var couleurs := ReadConfigFile("::colors");
658: decl local #7
659: "::colors"
660: Func(4,0): ReadConfigFile
661: :=
662: #
count := RandomDiceRoll(CStr(params[1]));
663: local #2
664: 1L
665: [] 1
666: Func(0,4): CStr
667: Func(5,1): RandomDiceRoll
668: local3 := 
params[1] := params[2];
669: local #2
670: 1L
671: local #2
672: 2L
673: [] 1
674: [] := (1) #
params[2] := params[3];
675: local #2
676: 2L
677: local #2
678: 3L
679: [] 1
680: [] := (1) #
params[3] := params[4];
681: local #2
682: 3L
683: local #2
684: 4L
685: [] 1
686: [] := (1) #
if (!count)
687: local #3
688: if true goto 691
count := 1;
689: 1L
690: local3 := 
objname := params[1];
691: local #2
692: 1L
693: [] 1
694: local4 := 
if(CInt(params[2]))
695: local #2
696: 2L
697: [] 1
698: Func(0,0): CInt
699: if false goto 706
color := CInt(params[2]);
700: local #2
701: 2L
702: [] 1
703: Func(0,0): CInt
704: local5 := 
705: goto798
elseif (params[2])
706: local #2
707: 2L
708: [] 1
709: if false goto 798
color := 0;
710: 0L
711: local5 := 
var colorg := FindConfigElem(couleurs, params[2]);
712: decl local #0
713: local #7
714: local #2
715: 2L
716: [] 1
717: Func(4,1): FindConfigElem
718: :=
719: #
if(colorg)
720: local #8
721: if false goto 797
var str := GetConfigStringArray(colorg, "color");
722: decl local #0
723: local #8
724: "color"
725: Func(4,3): GetConfigStringArray
726: :=
727: #
var ar := {};
728: decl local #1
729: array
730: :=
731: #
var rndint := RandomInt(len(str)) + 1;
732: decl local #2
733: local #9
734: Func(0,5): len
735: Func(5,0): RandomInt
736: 1L
737: +
738: :=
739: #
ar := SplitWords(str[rndint]);
740: local #9
741: local #11
742: [] 1
743: Func(0,1): SplitWords
744: local10 := 
if(len(ar) > 1)
745: local #10
746: Func(0,5): len
747: 1L
748: >
749: if false goto 781
if(CInt(ar[2]) > 0)
750: local #10
751: 2L
752: [] 1
753: Func(0,0): CInt
754: 0L
755: >
756: if false goto 771
color := RandomInt(CInt(ar[2]) - CInt(ar[1]))+1;
757: local #10
758: 2L
759: [] 1
760: Func(0,0): CInt
761: local #10
762: 1L
763: [] 1
764: Func(0,0): CInt
765: -
766: Func(5,0): RandomInt
767: 1L
768: +
769: local5 := 
770: goto780
color := CInt(str[RandomInt(len(str))+1]);
771: local #9
772: local #9
773: Func(0,5): len
774: Func(5,0): RandomInt
775: 1L
776: +
777: [] 1
778: Func(0,0): CInt
779: local5 := 
780: goto790
color := CInt(str[RandomInt(len(str))+1]);
781: local #9
782: local #9
783: Func(0,5): len
784: Func(5,0): RandomInt
785: 1L
786: +
787: [] 1
788: Func(0,0): CInt
789: local5 := 
if(color == 1)
790: local #5
791: 1L
792: ==
793: if false goto 796
color := 0;
794: 0L
795: local5 := 
796: leave block(3)
797: leave block(1)
if (!color)
798: local #5
799: if true goto 802
color := 0;
800: 0L
801: local5 := 
if(CInt(params[3]))
802: local #2
803: 3L
804: [] 1
805: Func(0,0): CInt
806: if false goto 813
chance := CInt(params[3]);
807: local #2
808: 3L
809: [] 1
810: Func(0,0): CInt
811: local6 := 
812: goto815
chance := 100;
813: 100L
814: local6 := 
if(CInt(RandomInt(100)+1) <= CInt(chance))
815: 100L
816: Func(5,0): RandomInt
817: 1L
818: +
819: Func(0,0): CInt
820: local #6
821: Func(0,0): CInt
822: <=
823: if false goto 917
var i, canbemagic;
824: decl local #0
825: #
826: decl local #1
827: #
for(i:=1; i<=CInt(count); i:=i+1)
828: local #8
829: 1L
830: :=
831: #
832: local #8
833: local #3
834: Func(0,0): CInt
835: <=
836: if false goto 916
if (CInt(objname))
837: local #4
838: Func(0,0): CInt
839: if false goto 843
objname := CInt(objname);
840: local #4
841: Func(0,0): CInt
842: local4 := 
var item := CreateItemInContainer(who, objname);
843: decl local #0
844: local #1
845: local #4
846: 1L
847: Func(2,16): CreateItemInContainer
848: :=
849: #
item.color := color;
850: local #10
851: local #5
852: set member 'color' #
if(making_starting_equipment)
853: global #5
854: if false goto 860
item.newbie := 1;
855: local #10
856: 1L
857: set member 'newbie' #
continue;
858: leave block(1)
859: goto909
if( (item.graphic in array( 0xdf2, 0xdf3, 0xdf4, 0xdf5, 0x13f9 )) && (magicspaw
860: local #10
861: get member 'graphic'
862: array
863: 3570L
864: +=
865: 3571L
866: +=
867: 3572L
868: +=
869: 3573L
870: +=
871: 5113L
872: +=
873: in
874: global #3
875: 1L
876: ==
877: &&
878: if false goto 884
ProcessWand(item);
879: local #10
880: makelocal
881: jmp userfunc @1314
882: #
883: goto908
if(magicspawnchance == 1)
884: global #3
885: 1L
886: ==
887: if false goto 908
canbemagic := MagicAllowedandType(objname);
888: local #4
889: makelocal
890: jmp userfunc @1248
891: local9 := 
case(canbemagic)
892: local #9
893: casejmp
	1: @894
	2: @899
	3: @904
	default: @908
WeaponTable(item);
894: local #10
895: makelocal
896: jmp userfunc @1482
897: #
898: goto908
ArmorTable(item);
899: local #10
900: makelocal
901: jmp userfunc @1910
902: #
903: goto908
ClothTable(item);
904: local #10
905: makelocal
906: jmp userfunc @1996
907: #
908: leave block(1)
909: local #8
910: local #8
911: 1L
912: +
913: :=
914: #
915: goto832
916: leave block(2)
917: 0L
918: return
C:/pol2/scripts/include/startEqp.inc, Line 350
function CreateFromRandomString(who, desc)
919: pop param 'desc'
920: pop param 'who'
var params := SplitWords(desc);
921: decl local #2
922: local #0
923: Func(0,1): SplitWords
924: :=
925: #
var amt := Cint(params[1]);
926: decl local #3
927: local #2
928: 1L
929: [] 1
930: Func(0,0): CInt
931: :=
932: #
var count := 1;
933: decl local #4
934: 1L
935: :=
936: #
if(amt != 1)
937: local #3
938: 1L
939: <>
940: if false goto 947
count := RandomDiceRoll(Cstr(amt + 1));
941: local #3
942: 1L
943: +
944: Func(0,4): CStr
945: Func(5,1): RandomDiceRoll
946: local4 := 
var group := params[2];
947: decl local #5
948: local #2
949: 2L
950: [] 1
951: :=
952: #
var chance := params[4];
953: decl local #6
954: local #2
955: 4L
956: [] 1
957: :=
958: #
var elem := FindConfigElem(starteqp_cfg, group);
959: decl local #7
960: global #1
961: local #5
962: Func(4,1): FindConfigElem
963: :=
964: #
if(elem == error)
965: local #7
966: error
967: ==
968: if false goto 976
syslog("Unable to find group " + group);
969: "Unable to find group "
970: local #5
971: +
972: Func(3,2): syslog
973: #
return;
974: ""
975: return
var items := GetConfigStringArray(elem, "Item");
976: decl local #8
977: local #7
978: "Item"
979: Func(4,3): GetConfigStringArray
980: :=
981: #
if(items == error)
982: local #8
983: error
984: ==
985: if false goto 995
syslog("Group " + group + " does not contain items!");
986: "Group "
987: local #5
988: +
989: " does not contain items!"
990: +
991: Func(3,2): syslog
992: #
return;
993: ""
994: return
if(!chance)
995: local #6
996: if true goto 999
chance := 100;
997: 100L
998: local6 := 
var rand := RandomInt(99)+1;
999: decl local #9
1000: 99L
1001: Func(5,0): RandomInt
1002: 1L
1003: +
1004: :=
1005: #
if(CInt(rand) <= CInt(chance))
1006: local #9
1007: Func(0,0): CInt
1008: local #6
1009: Func(0,0): CInt
1010: <=
1011: if false goto 1053
if(count > len(items))
1012: local #4
1013: local #8
1014: Func(0,5): len
1015: >
1016: if false goto 1020
count := len(items);
1017: local #8
1018: Func(0,5): len
1019: local4 := 
while(count)
1020: local #4
1021: if false goto 1053
var n := RandomInt(len(items)) + 1;
1022: decl local #0
1023: local #8
1024: Func(0,5): len
1025: Func(5,0): RandomInt
1026: 1L
1027: +
1028: :=
1029: #
if(items[n])
1030: local #8
1031: local #10
1032: [] 1
1033: if false goto 1051
CreateFromItemString(who, items[n]);
1034: local #1
1035: local #8
1036: local #10
1037: [] 1
1038: makelocal
1039: jmp userfunc @643
1040: #
if(making_starting_equipment)
1041: global #5
1042: if false goto 1047
items[n] := "";
1043: local #8
1044: local #10
1045: ""
1046: [] := (1) #
count := count - 1;
1047: local #4
1048: 1L
1049: -
1050: local4 := 
1051: leave block(1)
1052: goto1020
1053: 0L
1054: return
C:/pol2/scripts/include/startEqp.inc, Line 410
function CreateFromStackString(who, str)
1055: pop param 'str'
1056: pop param 'who'
var params := SplitWords(str);
1057: decl local #2
1058: local #0
1059: Func(0,1): SplitWords
1060: :=
1061: #
var count;
1062: decl local #3
1063: #
var objname;
1064: decl local #4
1065: #
var color;
1066: decl local #5
1067: #
var chance;
1068: decl local #6
1069: #
count := RandomDiceRoll(CStr(params[1]));
1070: local #2
1071: 1L
1072: [] 1
1073: Func(0,4): CStr
1074: Func(5,1): RandomDiceRoll
1075: local3 := 
params[1] := params[2];
1076: local #2
1077: 1L
1078: local #2
1079: 2L
1080: [] 1
1081: [] := (1) #
params[2] := params[3];
1082: local #2
1083: 2L
1084: local #2
1085: 3L
1086: [] 1
1087: [] := (1) #
params[3] := params[4];
1088: local #2
1089: 3L
1090: local #2
1091: 4L
1092: [] 1
1093: [] := (1) #
if (!count)
1094: local #3
1095: if true goto 1098
count := 1;
1096: 1L
1097: local3 := 
objname := params[1];
1098: local #2
1099: 1L
1100: [] 1
1101: local4 := 
if(CInt(params[2]))
1102: local #2
1103: 2L
1104: [] 1
1105: Func(0,0): CInt
1106: if false goto 1113
color := CInt(params[2]);
1107: local #2
1108: 2L
1109: [] 1
1110: Func(0,0): CInt
1111: local5 := 
1112: goto1115
color := 0;
1113: 0L
1114: local5 := 
if (CInt(params[3]))
1115: local #2
1116: 3L
1117: [] 1
1118: Func(0,0): CInt
1119: if false goto 1126
chance := CInt(params[3]);
1120: local #2
1121: 3L
1122: [] 1
1123: Func(0,0): CInt
1124: local6 := 
1125: goto1128
chance := 100;
1126: 100L
1127: local6 := 
var rand := RandomInt(100)+1;
1128: decl local #7
1129: 100L
1130: Func(5,0): RandomInt
1131: 1L
1132: +
1133: :=
1134: #
if(CInt(rand) <= CInt(chance))
1135: local #7
1136: Func(0,0): CInt
1137: local #6
1138: Func(0,0): CInt
1139: <=
1140: if false goto 1177
if (CInt(objname))
1141: local #4
1142: Func(0,0): CInt
1143: if false goto 1147
objname := CInt(objname);
1144: local #4
1145: Func(0,0): CInt
1146: local4 := 
var item := CreateItemInContainer(who, objname, count);
1147: decl local #0
1148: local #1
1149: local #4
1150: local #3
1151: Func(2,16): CreateItemInContainer
1152: :=
1153: #
if(!item)
1154: local #8
1155: if true goto 1168
syslog("Unable to create " + objname + " on " + who.name + ".");
1156: "Unable to create "
1157: local #4
1158: +
1159: " on "
1160: +
1161: local #1
1162: get member 'name'
1163: +
1164: "."
1165: +
1166: Func(3,2): syslog
1167: #
item.color := color;
1168: local #8
1169: local #5
1170: set member 'color' #
if(making_starting_equipment)
1171: global #5
1172: if false goto 1176
item.newbie := 1;
1173: local #8
1174: 1L
1175: set member 'newbie' #
1176: leave block(1)
1177: 0L
1178: return
C:/pol2/scripts/include/startEqp.inc, Line 390
function CreateFromUniqueString(who, str)
1179: pop param 'str'
1180: pop param 'who'
var params := SplitWords(str);
1181: decl local #2
1182: local #0
1183: Func(0,1): SplitWords
1184: :=
1185: #
var objtype;
1186: decl local #3
1187: #
if (CInt(params[1]))
1188: local #2
1189: 1L
1190: [] 1
1191: Func(0,0): CInt
1192: if false goto 1198
objtype := params[1];
1193: local #2
1194: 1L
1195: [] 1
1196: local3 := 
1197: goto1203
objtype := GetObjtypeByName(params[1]);
1198: local #2
1199: 1L
1200: [] 1
1201: Func(2,19): GetObjtypeByName
1202: local3 := 
if(!objtype)
1203: local #3
1204: if true goto 1214
syslog("Don't know what a " + str + " is");
1205: "Don't know what a "
1206: local #0
1207: +
1208: " is"
1209: +
1210: Func(3,2): syslog
1211: #
return;
1212: ""
1213: return
if(objtype in unique_items_created)
1214: local #3
1215: global #0
1216: in
1217: if false goto 1220
return;
1218: ""
1219: return
unique_items_created[len(unique_items_created) + 1] := objtype;
1220: global #0
1221: global #0
1222: Func(0,5): len
1223: 1L
1224: +
1225: local #3
1226: [] := (1) #
var newstr := "1 " + str;
1227: decl local #4
1228: "1 "
1229: local #0
1230: +
1231: :=
1232: #
CreateFromItemString(who, newstr);
1233: local #1
1234: local #4
1235: makelocal
1236: jmp userfunc @643
1237: #
1238: 0L
1239: return
C:/pol2/scripts/include/attributes.inc, Line 448
function GetHp(who)
1240: pop param 'who'
return Cint(GetVital(who, VITALID_LIFE)/ 100);
1241: local #0
1242: "Life"
1243: Func(2,10): GetVital
1244: 100L
1245: /
1246: Func(0,0): CInt
1247: return
C:/pol2/scripts/include/startEqp.inc, Line 450
function MagicAllowedandType(objname)
1248: pop param 'objname'
var magicweapcfg := ReadConfigFile(":combat:magicweaps");
1249: decl local #1
1250: ":combat:magicweaps"
1251: Func(4,0): ReadConfigFile
1252: :=
1253: #
var magicarmorcfg := ReadConfigFile(":combat:magicarmor");
1254: decl local #2
1255: ":combat:magicarmor"
1256: Func(4,0): ReadConfigFile
1257: :=
1258: #
var magicclothcfg := ReadConfigFile(":combat:magiccloth");
1259: decl local #3
1260: ":combat:magiccloth"
1261: Func(4,0): ReadConfigFile
1262: :=
1263: #
var elem1 := FindConfigElem(magicweapcfg, "1");
1264: decl local #4
1265: local #1
1266: "1"
1267: Func(4,1): FindConfigElem
1268: :=
1269: #
var data1 := GetConfigInt(elem1, objname);
1270: decl local #5
1271: local #4
1272: local #0
1273: Func(4,2): GetConfigInt
1274: :=
1275: #
if(data1)
1276: local #5
1277: if false goto 1280
return 1;
1278: 1L
1279: return
var elem2 := FindConfigElem(magicarmorcfg, "1");
1280: decl local #6
1281: local #2
1282: "1"
1283: Func(4,1): FindConfigElem
1284: :=
1285: #
var data2 := GetConfigInt(elem2, objname);
1286: decl local #7
1287: local #6
1288: local #0
1289: Func(4,2): GetConfigInt
1290: :=
1291: #
if(data2)
1292: local #7
1293: if false goto 1296
return 2;
1294: 2L
1295: return
var elem3 := FindConfigElem(magicclothcfg, "1");
1296: decl local #8
1297: local #3
1298: "1"
1299: Func(4,1): FindConfigElem
1300: :=
1301: #
var data3 := GetConfigInt(elem3, objname);
1302: decl local #9
1303: local #8
1304: local #0
1305: Func(4,2): GetConfigInt
1306: :=
1307: #
if(data3)
1308: local #9
1309: if false goto 1312
return 3;
1310: 3L
1311: return
return 0;
1312: 0L
1313: return
C:/pol2/scripts/include/startEqp.inc, Line 175
function ProcessWand(item)
1314: pop param 'item'
var amt;
1315: decl local #1
1316: #
case(RandomInt(10) + 1)
1317: 10L
1318: Func(5,0): RandomInt
1319: 1L
1320: +
1321: casejmp
	1: @1322
	2: @1335
	3: @1348
	4: @1361
	5: @1374
	6: @1387
	7: @1400
	8: @1413
	9: @1426
	10: @1439
	default: @1451
amt :=  15;   SetObjProperty(item, "SpellId",  1);   SetObjProperty(item, "dama
1322: 15L
1323: local1 := 
SetObjProperty(item, "SpellId",  1);   SetObjProperty(item, "damagemod", "of cl
1324: local #0
1325: "SpellId"
1326: 1L
1327: Func(2,3): SetObjProperty
1328: #
SetObjProperty(item, "damagemod", "of clumsiness");
1329: local #0
1330: "damagemod"
1331: "of clumsiness"
1332: Func(2,3): SetObjProperty
1333: #
1334: goto1451
amt :=  15;   SetObjProperty(item, "SpellId",  3);   SetObjProperty(item, "dama
1335: 15L
1336: local1 := 
SetObjProperty(item, "SpellId",  3);   SetObjProperty(item, "damagemod", "of fe
1337: local #0
1338: "SpellId"
1339: 3L
1340: Func(2,3): SetObjProperty
1341: #
SetObjProperty(item, "damagemod", "of feeblemindedness");
1342: local #0
1343: "damagemod"
1344: "of feeblemindedness"
1345: Func(2,3): SetObjProperty
1346: #
1347: goto1451
amt :=  15;   SetObjProperty(item, "SpellId",  4);   SetObjProperty(item, "dama
1348: 15L
1349: local1 := 
SetObjProperty(item, "SpellId",  4);   SetObjProperty(item, "damagemod", "of he
1350: local #0
1351: "SpellId"
1352: 4L
1353: Func(2,3): SetObjProperty
1354: #
SetObjProperty(item, "damagemod", "of healing");
1355: local #0
1356: "damagemod"
1357: "of healing"
1358: Func(2,3): SetObjProperty
1359: #
1360: goto1451
amt :=  15;   SetObjProperty(item, "SpellId",  8);   SetObjProperty(item, "dama
1361: 15L
1362: local1 := 
SetObjProperty(item, "SpellId",  8);   SetObjProperty(item, "damagemod", "of we
1363: local #0
1364: "SpellId"
1365: 8L
1366: Func(2,3): SetObjProperty
1367: #
SetObjProperty(item, "damagemod", "of weakness");
1368: local #0
1369: "damagemod"
1370: "of weakness"
1371: Func(2,3): SetObjProperty
1372: #
1373: goto1451
amt :=  10;   SetObjProperty(item, "SpellId", 12);   SetObjProperty(item, "dama
1374: 10L
1375: local1 := 
SetObjProperty(item, "SpellId", 12);   SetObjProperty(item, "damagemod", "of ha
1376: local #0
1377: "SpellId"
1378: 12L
1379: Func(2,3): SetObjProperty
1380: #
SetObjProperty(item, "damagemod", "of harming");
1381: local #0
1382: "damagemod"
1383: "of harming"
1384: Func(2,3): SetObjProperty
1385: #
1386: goto1451
amt :=   5;   SetObjProperty(item, "SpellId", 18);   SetObjProperty(item, "dama
1387: 5L
1388: local1 := 
SetObjProperty(item, "SpellId", 18);   SetObjProperty(item, "damagemod", "of fi
1389: local #0
1390: "SpellId"
1391: 18L
1392: Func(2,3): SetObjProperty
1393: #
SetObjProperty(item, "damagemod", "of fireballs");
1394: local #0
1395: "damagemod"
1396: "of fireballs"
1397: Func(2,3): SetObjProperty
1398: #
1399: goto1451
amt :=   5;   SetObjProperty(item, "SpellId", 29);   SetObjProperty(item, "dama
1400: 5L
1401: local1 := 
SetObjProperty(item, "SpellId", 29);   SetObjProperty(item, "damagemod", "of gr
1402: local #0
1403: "SpellId"
1404: 29L
1405: Func(2,3): SetObjProperty
1406: #
SetObjProperty(item, "damagemod", "of greater healing");
1407: local #0
1408: "damagemod"
1409: "of greater healing"
1410: Func(2,3): SetObjProperty
1411: #
1412: goto1451
amt :=   3;   SetObjProperty(item, "SpellId", 30);   SetObjProperty(item, "dama
1413: 3L
1414: local1 := 
SetObjProperty(item, "SpellId", 30);   SetObjProperty(item, "damagemod", "of li
1415: local #0
1416: "SpellId"
1417: 30L
1418: Func(2,3): SetObjProperty
1419: #
SetObjProperty(item, "damagemod", "of lightning");
1420: local #0
1421: "damagemod"
1422: "of lightning"
1423: Func(2,3): SetObjProperty
1424: #
1425: goto1451
amt :=  10;   SetObjProperty(item, "SpellId", 31);   SetObjProperty(item, "dama
1426: 10L
1427: local1 := 
SetObjProperty(item, "SpellId", 31);   SetObjProperty(item, "damagemod", "of ma
1428: local #0
1429: "SpellId"
1430: 31L
1431: Func(2,3): SetObjProperty
1432: #
SetObjProperty(item, "damagemod", "of mana draining");
1433: local #0
1434: "damagemod"
1435: "of mana draining"
1436: Func(2,3): SetObjProperty
1437: #
1438: goto1451
amt := 100;   SetObjProperty(item, "SpellId", 65);   SetObjProperty(item, "dama
1439: 100L
1440: local1 := 
SetObjProperty(item, "SpellId", 65);   SetObjProperty(item, "damagemod", "of id
1441: local #0
1442: "SpellId"
1443: 65L
1444: Func(2,3): SetObjProperty
1445: #
SetObjProperty(item, "damagemod", "of identification");
1446: local #0
1447: "damagemod"
1448: "of identification"
1449: Func(2,3): SetObjProperty
1450: #
SetObjProperty(item, "charges", (amt + RandomInt(10)));
1451: local #0
1452: "charges"
1453: local #1
1454: 10L
1455: Func(5,0): RandomInt
1456: +
1457: Func(2,3): SetObjProperty
1458: #
item.usescript := ":wands:magicWands";
1459: local #0
1460: ":wands:magicWands"
1461: set member 'usescript' #
var dsc;
1462: decl local #2
1463: #
if(item.objtype == 0x13f9)
1464: local #0
1465: get member 'objtype'
1466: 5113L
1467: ==
1468: if false goto 1472
dsc := "gnarled staff";
1469: "gnarled staff"
1470: local2 := 
1471: goto1474
dsc := "wand";
1472: "wand"
1473: local2 := 
SetName(item, "a magic " + dsc);
1474: local #0
1475: "a magic "
1476: local #2
1477: +
1478: Func(2,17): SetName
1479: #
1480: 0L
1481: return
C:/pol2/scripts/include/startEqp.inc, Line 317
function WeaponTable(item)
1482: pop param 'item'
var newarray := array(1, 2, 3);
1483: decl local #1
1484: array
1485: 1L
1486: +=
1487: 2L
1488: +=
1489: 3L
1490: +=
1491: :=
1492: #
var count := RandomInt(100) + 1;
1493: decl local #2
1494: 100L
1495: Func(5,0): RandomInt
1496: 1L
1497: +
1498: :=
1499: #
var counter;
1500: decl local #3
1501: #
if(count >= 60)
1502: local #2
1503: 60L
1504: >=
1505: if false goto 1509
counter := 1;
1506: 1L
1507: local3 := 
1508: goto1525
elseif(count >= 40)
1509: local #2
1510: 40L
1511: >=
1512: if false goto 1516
counter := 2;
1513: 2L
1514: local3 := 
1515: goto1525
elseif(count >= 10)
1516: local #2
1517: 10L
1518: >=
1519: if false goto 1523
counter := 3;
1520: 3L
1521: local3 := 
1522: goto1525
counter := 4;
1523: 4L
1524: local3 := 
if(counter == 1)
1525: local #3
1526: 1L
1527: ==
1528: if false goto 1534
DestroyItem(item);
1529: local #0
1530: Func(2,18): DestroyItem
1531: #
return;
1532: ""
1533: return
count := 0;
1534: 0L
1535: local2 := 
var num, val;
1536: decl local #4
1537: #
1538: decl local #5
1539: #
while(count <= counter)
1540: local #2
1541: local #3
1542: <=
1543: if false goto 1579
num := RandomInt(len(newarray)) + 1;
1544: local #1
1545: Func(0,5): len
1546: Func(5,0): RandomInt
1547: 1L
1548: +
1549: local4 := 
val := newarray[num];
1550: local #1
1551: local #4
1552: [] 1
1553: local5 := 
case(val)
1554: local #5
1555: casejmp
	1: @1556
	2: @1561
	3: @1566
	default: @1570
ApplyAccyMod(item);
1556: local #0
1557: makelocal
1558: jmp userfunc @1632
1559: #
1560: goto1570
ApplyHPMod(item);
1561: local #0
1562: makelocal
1563: jmp userfunc @1809
1564: #
1565: goto1570
ApplyDmgMod(item);
1566: local #0
1567: makelocal
1568: jmp userfunc @1723
1569: #
newarray.erase(num);
1570: local #1
1571: local #4
1572: Call Method erase (1 params)
1573: #
count := count + 1;
1574: local #2
1575: 1L
1576: +
1577: local2 := 
1578: goto1540
AddName(item);
1579: local #0
1580: makelocal
1581: jmp userfunc @1585
1582: #
1583: 0L
1584: return
C:/pol2/scripts/include/startEqp.inc, Line 582
function AddName(item)
1585: pop param 'item'
var currdesc := item.desc;
1586: decl local #1
1587: local #0
1588: get member 'desc'
1589: :=
1590: #
if(currdesc[1] == "a")
1591: local #1
1592: 1L
1593: [] 1
1594: "a"
1595: ==
1596: if false goto 1624
var space := find(item.desc, " ", 1);
1597: decl local #0
1598: local #0
1599: get member 'desc'
1600: " "
1601: 1L
1602: Func(0,6): find
1603: :=
1604: #
var newname := currdesc[space+1,len(item.desc)];
1605: decl local #1
1606: local #1
1607: local #2
1608: 1L
1609: +
1610: local #0
1611: get member 'desc'
1612: Func(0,5): len
1613: [,]
1614: :=
1615: #
SetName(item,"a magic " + newname);
1616: local #0
1617: "a magic "
1618: local #3
1619: +
1620: Func(2,17): SetName
1621: #
1622: leave block(2)
1623: goto1630
SetName(item, "magic " + currdesc);
1624: local #0
1625: "magic "
1626: local #1
1627: +
1628: Func(2,17): SetName
1629: #
1630: 0L
1631: return
C:/pol2/scripts/include/startEqp.inc, Line 496
function ApplyAccyMod(item)
1632: pop param 'item'
var numb := ((RandomInt(100)+1) - magicadjustment);
1633: decl local #1
1634: 100L
1635: Func(5,0): RandomInt
1636: 1L
1637: +
1638: global #4
1639: -
1640: :=
1641: #
if(numb < 1)
1642: local #1
1643: 1L
1644: <
1645: if false goto 1648
numb := 1;
1646: 1L
1647: local1 := 
var modifier := 0;
1648: decl local #2
1649: 0L
1650: :=
1651: #
if(numb >= 50)
1652: local #1
1653: 50L
1654: >=
1655: if false goto 1664
modifier := 5;
1656: 5L
1657: local2 := 
SetObjProperty(item, "accuracy", "accurate");
1658: local #0
1659: "accuracy"
1660: "accurate"
1661: Func(2,3): SetObjProperty
1662: #
1663: goto1711
elseif(numb >= 25)
1664: local #1
1665: 25L
1666: >=
1667: if false goto 1676
modifier := 10;
1668: 10L
1669: local2 := 
SetObjProperty(item, "accuracy", "surpassingly accurate");
1670: local #0
1671: "accuracy"
1672: "surpassingly accurate"
1673: Func(2,3): SetObjProperty
1674: #
1675: goto1711
elseif(numb >= 15)
1676: local #1
1677: 15L
1678: >=
1679: if false goto 1688
modifier := 15;
1680: 15L
1681: local2 := 
SetObjProperty(item, "accuracy", "eminently accurate");
1682: local #0
1683: "accuracy"
1684: "eminently accurate"
1685: Func(2,3): SetObjProperty
1686: #
1687: goto1711
elseif(numb >= 5)
1688: local #1
1689: 5L
1690: >=
1691: if false goto 1700
modifier := 20;
1692: 20L
1693: local2 := 
SetObjProperty(item, "accuracy", "exceedingly accurate");
1694: local #0
1695: "accuracy"
1696: "exceedingly accurate"
1697: Func(2,3): SetObjProperty
1698: #
1699: goto1711
elseif(numb >= 1)
1700: local #1
1701: 1L
1702: >=
1703: if false goto 1711
modifier := 25;
1704: 25L
1705: local2 := 
SetObjProperty(item, "accuracy", "supremely accurate");
1706: local #0
1707: "accuracy"
1708: "supremely accurate"
1709: Func(2,3): SetObjProperty
1710: #
SetObjProperty(item, "type", "accuracy");
1711: local #0
1712: "type"
1713: "accuracy"
1714: Func(2,3): SetObjProperty
1715: #
SetObjProperty(item, "gain", modifier);
1716: local #0
1717: "gain"
1718: local #2
1719: Func(2,3): SetObjProperty
1720: #
1721: 0L
1722: return
C:/pol2/scripts/include/startEqp.inc, Line 472
function ApplyDmgMod(item)
1723: pop param 'item'
var numb := ((RandomInt(100)+1) - magicadjustment);
1724: decl local #1
1725: 100L
1726: Func(5,0): RandomInt
1727: 1L
1728: +
1729: global #4
1730: -
1731: :=
1732: #
if(numb < 1)
1733: local #1
1734: 1L
1735: <
1736: if false goto 1739
numb := 1;
1737: 1L
1738: local1 := 
if(numb >= 50)
1739: local #1
1740: 50L
1741: >=
1742: if false goto 1752
item.dmg_mod := 1;
1743: local #0
1744: 1L
1745: set member 'dmg_mod' #
SetObjProperty(item, "damagemod", "of ruin");
1746: local #0
1747: "damagemod"
1748: "of ruin"
1749: Func(2,3): SetObjProperty
1750: #
1751: goto1803
elseif(numb >= 25)
1752: local #1
1753: 25L
1754: >=
1755: if false goto 1765
item.dmg_mod := 3;
1756: local #0
1757: 3L
1758: set member 'dmg_mod' #
SetObjProperty(item, "damagemod", "of might");
1759: local #0
1760: "damagemod"
1761: "of might"
1762: Func(2,3): SetObjProperty
1763: #
1764: goto1803
elseif(numb >= 15)
1765: local #1
1766: 15L
1767: >=
1768: if false goto 1778
item.dmg_mod := 5;
1769: local #0
1770: 5L
1771: set member 'dmg_mod' #
SetObjProperty(item, "damagemod", "of force");
1772: local #0
1773: "damagemod"
1774: "of force"
1775: Func(2,3): SetObjProperty
1776: #
1777: goto1803
elseif(numb >= 5)
1778: local #1
1779: 5L
1780: >=
1781: if false goto 1791
item.dmg_mod := 7;
1782: local #0
1783: 7L
1784: set member 'dmg_mod' #
SetObjProperty(item, "damagemod", "of power");
1785: local #0
1786: "damagemod"
1787: "of power"
1788: Func(2,3): SetObjProperty
1789: #
1790: goto1803
elseif(numb >= 1)
1791: local #1
1792: 1L
1793: >=
1794: if false goto 1803
item.dmg_mod := 9;
1795: local #0
1796: 9L
1797: set member 'dmg_mod' #
SetObjProperty(item, "damagemod", "of vanquishing");
1798: local #0
1799: "damagemod"
1800: "of vanquishing"
1801: Func(2,3): SetObjProperty
1802: #
SilverMod(item);
1803: local #0
1804: makelocal
1805: jmp userfunc @2360
1806: #
1807: 0L
1808: return
C:/pol2/scripts/include/startEqp.inc, Line 522
function ApplyHPMod(item)
1809: pop param 'item'
var numb := ((RandomInt(100)+1) - magicadjustment);
1810: decl local #1
1811: 100L
1812: Func(5,0): RandomInt
1813: 1L
1814: +
1815: global #4
1816: -
1817: :=
1818: #
if(numb < 1)
1819: local #1
1820: 1L
1821: <
1822: if false goto 1825
numb := 1;
1823: 1L
1824: local1 := 
if(numb >= 50)
1825: local #1
1826: 50L
1827: >=
1828: if false goto 1841
item.maxhp_mod := item.maxhp_mod + 05;
1829: local #0
1830: local #0
1831: get member 'maxhp_mod'
1832: 5L
1833: +
1834: set member 'maxhp_mod' #
SetObjProperty(item, "durability", "durable");
1835: local #0
1836: "durability"
1837: "durable"
1838: Func(2,3): SetObjProperty
1839: #
1840: goto1904
elseif(numb >= 25)
1841: local #1
1842: 25L
1843: >=
1844: if false goto 1857
item.maxhp_mod := item.maxhp_mod + 10;
1845: local #0
1846: local #0
1847: get member 'maxhp_mod'
1848: 10L
1849: +
1850: set member 'maxhp_mod' #
SetObjProperty(item, "durability", "substantial");
1851: local #0
1852: "durability"
1853: "substantial"
1854: Func(2,3): SetObjProperty
1855: #
1856: goto1904
elseif(numb >= 15)
1857: local #1
1858: 15L
1859: >=
1860: if false goto 1873
item.maxhp_mod := item.maxhp_mod + 15;
1861: local #0
1862: local #0
1863: get member 'maxhp_mod'
1864: 15L
1865: +
1866: set member 'maxhp_mod' #
SetObjProperty(item, "durability", "massive");
1867: local #0
1868: "durability"
1869: "massive"
1870: Func(2,3): SetObjProperty
1871: #
1872: goto1904
elseif(numb >= 5)
1873: local #1
1874: 5L
1875: >=
1876: if false goto 1889
item.maxhp_mod := item.maxhp_mod + 20;
1877: local #0
1878: local #0
1879: get member 'maxhp_mod'
1880: 20L
1881: +
1882: set member 'maxhp_mod' #
SetObjProperty(item, "durability", "fortified");
1883: local #0
1884: "durability"
1885: "fortified"
1886: Func(2,3): SetObjProperty
1887: #
1888: goto1904
elseif(numb >= 1)
1889: local #1
1890: 1L
1891: >=
1892: if false goto 1904
item.maxhp_mod := item.maxhp_mod + 25;
1893: local #0
1894: local #0
1895: get member 'maxhp_mod'
1896: 25L
1897: +
1898: set member 'maxhp_mod' #
SetObjProperty(item, "durability", "indestructable");
1899: local #0
1900: "durability"
1901: "indestructable"
1902: Func(2,3): SetObjProperty
1903: #
item.hp := item.maxhp;
1904: local #0
1905: local #0
1906: get member 'maxhp'
1907: set member 'hp' #
1908: 0L
1909: return
C:/pol2/scripts/include/startEqp.inc, Line 236
function ArmorTable(item)
1910: pop param 'item'
var newarray := {1, 2};
1911: decl local #1
1912: array
1913: 1L
1914: +=
1915: 2L
1916: +=
1917: :=
1918: #
var count := RandomInt(99) + 1;
1919: decl local #2
1920: 99L
1921: Func(5,0): RandomInt
1922: 1L
1923: +
1924: :=
1925: #
var counter;
1926: decl local #3
1927: #
if(count >= 40)
1928: local #2
1929: 40L
1930: >=
1931: if false goto 1935
counter := 1;
1932: 1L
1933: local3 := 
1934: goto1937
counter := 2;
1935: 2L
1936: local3 := 
count := 0;
1937: 0L
1938: local2 := 
var num;
1939: decl local #4
1940: #
while(count <= counter)
1941: local #2
1942: local #3
1943: <=
1944: if false goto 1979
num := RandomInt(99) + 1;
1945: 99L
1946: Func(5,0): RandomInt
1947: 1L
1948: +
1949: local4 := 
if(num >=  50)
1950: local #4
1951: 50L
1952: >=
1953: if false goto 1957
num := 1;
1954: 1L
1955: local4 := 
1956: goto1959
num := 2;
1957: 2L
1958: local4 := 
case(num)
1959: local #4
1960: casejmp
	1: @1961
	2: @1966
	default: @1970
ApplyHPMod(item);
1961: local #0
1962: makelocal
1963: jmp userfunc @1809
1964: #
1965: goto1970
ApplyARMod(item);
1966: local #0
1967: makelocal
1968: jmp userfunc @2399
1969: #
newarray.erase(num);
1970: local #1
1971: local #4
1972: Call Method erase (1 params)
1973: #
count := count + 1;
1974: local #2
1975: 1L
1976: +
1977: local2 := 
1978: goto1941
if((RandomInt(10)+1) <= 1)
1979: 10L
1980: Func(5,0): RandomInt
1981: 1L
1982: +
1983: 1L
1984: <=
1985: if false goto 1990
ExtraArmorTable(item);
1986: local #0
1987: makelocal
1988: jmp userfunc @2173
1989: #
AddName(item);
1990: local #0
1991: makelocal
1992: jmp userfunc @1585
1993: #
1994: 0L
1995: return
C:/pol2/scripts/include/startEqp.inc, Line 200
function ClothTable(item)
1996: pop param 'item'
var val := RandomInt(19) + 1;
1997: decl local #1
1998: 19L
1999: Func(5,0): RandomInt
2000: 1L
2001: +
2002: :=
2003: #
if(val >= 14)
2004: local #1
2005: 14L
2006: >=
2007: if false goto 2032
var charges := RandomDiceRoll("1d30") + 10;
2008: decl local #0
2009: "1d30"
2010: Func(5,1): RandomDiceRoll
2011: 10L
2012: +
2013: :=
2014: #
SetObjProperty(item, "charges", charges);
2015: local #0
2016: "charges"
2017: local #2
2018: Func(2,3): SetObjProperty
2019: #
SetObjProperty(item, "type", "sight");
2020: local #0
2021: "type"
2022: "sight"
2023: Func(2,3): SetObjProperty
2024: #
SetObjProperty(item, "damagemod", " of nightsight");
2025: local #0
2026: "damagemod"
2027: " of nightsight"
2028: Func(2,3): SetObjProperty
2029: #
2030: leave block(1)
2031: goto2167
elseif(val >= 11)
2032: local #1
2033: 11L
2034: >=
2035: if false goto 2060
var charges := RandomDiceRoll("1d30") + 10;
2036: decl local #0
2037: "1d30"
2038: Func(5,1): RandomDiceRoll
2039: 10L
2040: +
2041: :=
2042: #
SetObjProperty(item, "charges", charges);
2043: local #0
2044: "charges"
2045: local #2
2046: Func(2,3): SetObjProperty
2047: #
SetObjProperty(item, "type", "protection");
2048: local #0
2049: "type"
2050: "protection"
2051: Func(2,3): SetObjProperty
2052: #
SetObjProperty(item, "damagemod", " of protection");
2053: local #0
2054: "damagemod"
2055: " of protection"
2056: Func(2,3): SetObjProperty
2057: #
2058: leave block(1)
2059: goto2167
elseif(val <= 8)
2060: local #1
2061: 8L
2062: <=
2063: if false goto 2088
var charges := RandomDiceRoll("1d30") + 10;
2064: decl local #0
2065: "1d30"
2066: Func(5,1): RandomDiceRoll
2067: 10L
2068: +
2069: :=
2070: #
SetObjProperty(item, "charges", charges);
2071: local #0
2072: "charges"
2073: local #2
2074: Func(2,3): SetObjProperty
2075: #
SetObjProperty(item, "type", "strength");
2076: local #0
2077: "type"
2078: "strength"
2079: Func(2,3): SetObjProperty
2080: #
SetObjProperty(item, "damagemod", " of strength");
2081: local #0
2082: "damagemod"
2083: " of strength"
2084: Func(2,3): SetObjProperty
2085: #
2086: leave block(1)
2087: goto2167
elseif(val > 5)
2088: local #1
2089: 5L
2090: >
2091: if false goto 2116
var charges := RandomDiceRoll("1d30") + 10;
2092: decl local #0
2093: "1d30"
2094: Func(5,1): RandomDiceRoll
2095: 10L
2096: +
2097: :=
2098: #
SetObjProperty(item, "charges", charges);
2099: local #0
2100: "charges"
2101: local #2
2102: Func(2,3): SetObjProperty
2103: #
SetObjProperty(item, "type", "invisibility");
2104: local #0
2105: "type"
2106: "invisibility"
2107: Func(2,3): SetObjProperty
2108: #
SetObjProperty(item, "damagemod", " of invisibility");
2109: local #0
2110: "damagemod"
2111: " of invisibility"
2112: Func(2,3): SetObjProperty
2113: #
2114: leave block(1)
2115: goto2167
elseif(val == 3)
2116: local #1
2117: 3L
2118: ==
2119: if false goto 2144
var charges := RandomDiceRoll("1d30") + 10;
2120: decl local #0
2121: "1d30"
2122: Func(5,1): RandomDiceRoll
2123: 10L
2124: +
2125: :=
2126: #
SetObjProperty(item, "charges", charges);
2127: local #0
2128: "charges"
2129: local #2
2130: Func(2,3): SetObjProperty
2131: #
SetObjProperty(item, "type", "blessing");
2132: local #0
2133: "type"
2134: "blessing"
2135: Func(2,3): SetObjProperty
2136: #
SetObjProperty(item, "damagemod", " of blessing");
2137: local #0
2138: "damagemod"
2139: " of blessing"
2140: Func(2,3): SetObjProperty
2141: #
2142: leave block(1)
2143: goto2167
var charges := RandomDiceRoll("1d30") + 10;
2144: decl local #0
2145: "1d30"
2146: Func(5,1): RandomDiceRoll
2147: 10L
2148: +
2149: :=
2150: #
SetObjProperty(item, "charges", charges);
2151: local #0
2152: "charges"
2153: local #2
2154: Func(2,3): SetObjProperty
2155: #
SetObjProperty(item, "type", "reflect");
2156: local #0
2157: "type"
2158: "reflect"
2159: Func(2,3): SetObjProperty
2160: #
SetObjProperty(item, "damagemod", " of magic reflection");
2161: local #0
2162: "damagemod"
2163: " of magic reflection"
2164: Func(2,3): SetObjProperty
2165: #
2166: leave block(1)
AddName(item);
2167: local #0
2168: makelocal
2169: jmp userfunc @1585
2170: #
2171: 0L
2172: return
C:/pol2/scripts/include/startEqp.inc, Line 267
function ExtraArmorTable(item)
2173: pop param 'item'
var val := RandomInt(4) + 1;
2174: decl local #1
2175: 4L
2176: Func(5,0): RandomInt
2177: 1L
2178: +
2179: :=
2180: #
case(val)
2181: local #1
2182: casejmp
	1: @2183
	2: @2227
	3: @2271
	4: @2315
	default: @2358
var charges := RandomDiceRoll("1d30") + 10;
2183: decl local #0
2184: "1d30"
2185: Func(5,1): RandomDiceRoll
2186: 10L
2187: +
2188: :=
2189: #
SetObjProperty(item, "charges", charges);
2190: local #0
2191: "charges"
2192: local #2
2193: Func(2,3): SetObjProperty
2194: #
SetObjProperty(item, "type", "protection");
2195: local #0
2196: "type"
2197: "protection"
2198: Func(2,3): SetObjProperty
2199: #
var dmgmod := GetObjProperty(item, "damagemod");
2200: decl local #1
2201: local #0
2202: "damagemod"
2203: Func(2,1): GetObjProperty
2204: :=
2205: #
if(dmgmod)
2206: local #3
2207: if false goto 2218
dmgmod := dmgmod + " and protection";
2208: local #3
2209: " and protection"
2210: +
2211: local3 := 
SetObjProperty(item, "damagemod", dmgmod);
2212: local #0
2213: "damagemod"
2214: local #3
2215: Func(2,3): SetObjProperty
2216: #
2217: goto2225
dmgmod := " of protection";
2218: " of protection"
2219: local3 := 
SetObjProperty(item, "damagemod", dmgmod);
2220: local #0
2221: "damagemod"
2222: local #3
2223: Func(2,3): SetObjProperty
2224: #
2225: leave block(2)
2226: goto2358
var charges := RandomDiceRoll("1d30") + 10;
2227: decl local #0
2228: "1d30"
2229: Func(5,1): RandomDiceRoll
2230: 10L
2231: +
2232: :=
2233: #
SetObjProperty(item, "charges", charges);
2234: local #0
2235: "charges"
2236: local #2
2237: Func(2,3): SetObjProperty
2238: #
SetObjProperty(item, "type", "strength");
2239: local #0
2240: "type"
2241: "strength"
2242: Func(2,3): SetObjProperty
2243: #
var dmgmod := GetObjProperty(item, "damagemod");
2244: decl local #1
2245: local #0
2246: "damagemod"
2247: Func(2,1): GetObjProperty
2248: :=
2249: #
if(dmgmod)
2250: local #3
2251: if false goto 2262
dmgmod := dmgmod + " and strength";
2252: local #3
2253: " and strength"
2254: +
2255: local3 := 
SetObjProperty(item, "damagemod", dmgmod);
2256: local #0
2257: "damagemod"
2258: local #3
2259: Func(2,3): SetObjProperty
2260: #
2261: goto2269
dmgmod := " of strength";
2262: " of strength"
2263: local3 := 
SetObjProperty(item, "damagemod", dmgmod);
2264: local #0
2265: "damagemod"
2266: local #3
2267: Func(2,3): SetObjProperty
2268: #
2269: leave block(2)
2270: goto2358
var charges := RandomDiceRoll("1d30") + 10;
2271: decl local #0
2272: "1d30"
2273: Func(5,1): RandomDiceRoll
2274: 10L
2275: +
2276: :=
2277: #
SetObjProperty(item, "charges", charges);
2278: local #0
2279: "charges"
2280: local #2
2281: Func(2,3): SetObjProperty
2282: #
SetObjProperty(item, "type", "blessing");
2283: local #0
2284: "type"
2285: "blessing"
2286: Func(2,3): SetObjProperty
2287: #
var dmgmod := GetObjProperty(item, "damagemod");
2288: decl local #1
2289: local #0
2290: "damagemod"
2291: Func(2,1): GetObjProperty
2292: :=
2293: #
if(dmgmod)
2294: local #3
2295: if false goto 2306
dmgmod := dmgmod + " and blessing";
2296: local #3
2297: " and blessing"
2298: +
2299: local3 := 
SetObjProperty(item, "damagemod", dmgmod);
2300: local #0
2301: "damagemod"
2302: local #3
2303: Func(2,3): SetObjProperty
2304: #
2305: goto2313
dmgmod := " of blessing";
2306: " of blessing"
2307: local3 := 
SetObjProperty(item, "damagemod", dmgmod);
2308: local #0
2309: "damagemod"
2310: local #3
2311: Func(2,3): SetObjProperty
2312: #
2313: leave block(2)
2314: goto2358
var charges := RandomDiceRoll("1d30") + 10;
2315: decl local #0
2316: "1d30"
2317: Func(5,1): RandomDiceRoll
2318: 10L
2319: +
2320: :=
2321: #
SetObjProperty(item, "charges", charges);
2322: local #0
2323: "charges"
2324: local #2
2325: Func(2,3): SetObjProperty
2326: #
SetObjProperty(item, "type", "reflect");
2327: local #0
2328: "type"
2329: "reflect"
2330: Func(2,3): SetObjProperty
2331: #
var dmgmod := GetObjProperty(item, "damagemod");
2332: decl local #1
2333: local #0
2334: "damagemod"
2335: Func(2,1): GetObjProperty
2336: :=
2337: #
if(dmgmod)
2338: local #3
2339: if false goto 2350
dmgmod := dmgmod + " and magic reflection";
2340: local #3
2341: " and magic reflection"
2342: +
2343: local3 := 
SetObjProperty(item, "damagemod", dmgmod);
2344: local #0
2345: "damagemod"
2346: local #3
2347: Func(2,3): SetObjProperty
2348: #
2349: goto2357
dmgmod := " of magic reflection";
2350: " of magic reflection"
2351: local3 := 
SetObjProperty(item, "damagemod", dmgmod);
2352: local #0
2353: "damagemod"
2354: local #3
2355: Func(2,3): SetObjProperty
2356: #
2357: leave block(2)
2358: 0L
2359: return
C:/pol2/scripts/include/startEqp.inc, Line 569
function SilverMod(item)
2360: pop param 'item'
var numb := (RandomInt(10) + 1);
2361: decl local #1
2362: 10L
2363: Func(5,0): RandomInt
2364: 1L
2365: +
2366: :=
2367: #
if(numb == 1)
2368: local #1
2369: 1L
2370: ==
2371: if false goto 2397
var hits := GetObjProperty(item, "OnHit");
2372: decl local #0
2373: local #0
2374: "OnHit"
2375: Func(2,1): GetObjProperty
2376: :=
2377: #
if(!hits)
2378: local #2
2379: if true goto 2382
hits := {};
2380: array
2381: local2 := 
hits.append("silverHit");
2382: local #2
2383: "silverHit"
2384: Call Method append (1 params)
2385: #
SetObjProperty(item, "OnHit", hits);
2386: local #0
2387: "OnHit"
2388: local #2
2389: Func(2,3): SetObjProperty
2390: #
SetObjProperty(item, "silvermod", 1);
2391: local #0
2392: "silvermod"
2393: 1L
2394: Func(2,3): SetObjProperty
2395: #
2396: leave block(1)
2397: 0L
2398: return
C:/pol2/scripts/include/startEqp.inc, Line 546
function ApplyARMod(item)
2399: pop param 'item'
var numb := ((RandomInt(100)+1) - magicadjustment);
2400: decl local #1
2401: 100L
2402: Func(5,0): RandomInt
2403: 1L
2404: +
2405: global #4
2406: -
2407: :=
2408: #
if(numb < 1)
2409: local #1
2410: 1L
2411: <
2412: if false goto 2415
numb := 1;
2413: 1L
2414: local1 := 
if(numb >= 50)
2415: local #1
2416: 50L
2417: >=
2418: if false goto 2428
item.ar_mod := 5;
2419: local #0
2420: 5L
2421: set member 'ar_mod' #
SetObjProperty(item, "damagemod", "of defense");
2422: local #0
2423: "damagemod"
2424: "of defense"
2425: Func(2,3): SetObjProperty
2426: #
2427: goto2479
elseif(numb >= 25)
2428: local #1
2429: 25L
2430: >=
2431: if false goto 2441
item.ar_mod := 10;
2432: local #0
2433: 10L
2434: set member 'ar_mod' #
SetObjProperty(item, "damagemod", "of guarding");
2435: local #0
2436: "damagemod"
2437: "of guarding"
2438: Func(2,3): SetObjProperty
2439: #
2440: goto2479
elseif(numb >= 15)
2441: local #1
2442: 15L
2443: >=
2444: if false goto 2454
item.ar_mod := 15;
2445: local #0
2446: 15L
2447: set member 'ar_mod' #
SetObjProperty(item, "damagemod", "of hardening");
2448: local #0
2449: "damagemod"
2450: "of hardening"
2451: Func(2,3): SetObjProperty
2452: #
2453: goto2479
elseif(numb >= 5)
2454: local #1
2455: 5L
2456: >=
2457: if false goto 2467
item.ar_mod := 20;
2458: local #0
2459: 20L
2460: set member 'ar_mod' #
SetObjProperty(item, "damagemod", "of fortification");
2461: local #0
2462: "damagemod"
2463: "of fortification"
2464: Func(2,3): SetObjProperty
2465: #
2466: goto2479
elseif(numb >= 1)
2467: local #1
2468: 1L
2469: >=
2470: if false goto 2479
item.ar_mod := 25;
2471: local #0
2472: 25L
2473: set member 'ar_mod' #
SetObjProperty(item, "damagemod", "of invulnerability");
2474: local #0
2475: "damagemod"
2476: "of invulnerability"
2477: Func(2,3): SetObjProperty
2478: #
2479: 0L
2480: return
