use uo;
use basic;
use cfgfile;
use util;
use os;

include "include/bitwise";
include "include/attributes";
include "include/client";
include "include/objtype";
include "include/skillPoints";
include "include/canAccess";
include "include/noto";

var config_file;

program do_inscription(who)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
  var themenu,value,the_item,the_book,skill,points;
  var elem,spell_name,selected_spell,product,spellnum;
  var circle,themana;
  var spells := { };
  config_file := ReadConfigFile("inscription");
  SendSysMessage(who, "Ondi Deseja escrever ??");
  the_item := Target(who, "");
  if(!can_access(who, the_item))
    return;
  endif
  if(the_item.movable == 0)
    SendSysMessage(who, "You cannot use that.");
    return;
  endif
  if(!the_item)
    SendSysMessage(who, "Targetting cancelled.");
    return;
  endif
  if(!Accessible(who, the_item))
    SendSysMessage(who, "You can't reach that!");
    return;
  endif
  if(!ReserveItem(the_item))
    return;
  endif
  if(the_item.objtype == UOBJ_BLANK_SCROLL)
    foreach thing in ListRootItemsInContainer(who.backpack)
      if(thing.objtype == 0x0efa)
        the_book := thing;
        break;
      endif
    endforeach
    if(!the_book)
      SendSysMessage(who, "You dont have a spellbook.");
      return;
    endif
    if(!Accessible(who, the_book))
      SendSysMessage(who, "You can't reach that!");
      return;
    endif
    if(the_book.objtype != UOBJ_SPELLBOOK)
      SendSysMessage(who, "You can't inscribe from that!");
      return;
    endif
    selected_spell := MakeAndProcessMenu(who, the_book);
    if(!selected_spell)
      return;
    endif
    elem := FindConfigElem(config_file, selected_spell);
    skill := GetConfigInt(elem, "skill");
    points := GetConfigInt(elem, "points");
    circle := GetConfigInt(elem, "circle");
    themana := usemana(who, circle);
    product := GetConfigInt(elem, "scroll");
    spellnum := GetConfigInt(elem, "SpellId");
    if(themana == 0)
      SendSysMessage(who,"you do not have enough mana.");
      return;
    endif
if((ConsumeReagents(who, spellnum)) && (GetMana(who) >= themana))
      SetMana(who, GetMana(who) - themana);
        endif

      if(CheckSkill(who, SKILLID_INSCRIPTION, skill, points))
        PlaySoundEffect(who, 0x24a);
        if(SubtractAmount(the_item,1))
          var thescroll := CreateItemInBackpack(who, product);
          var myskill := CInt(GetEffectiveSkill(who, SKILLID_INSCRIPTION));
          var modpts := 0;
          if(myskill >=  skill)
            modpts := (myskill - (skill - 10));
          endif
          var rint := RandomInt(100);
          if(modpts >= rint)
            ExceptionalFameMod(who, myskill, skill, Cint(skill / 2));
          endif
 SendSysMessage(who, "You create the scroll and put it in your backpack");
    
      else
        SendSysMessage(who, "You fail and destroy the scroll");
        SubtractAmount(the_item,1);
      endif
    else
      SendSysMessage(who,"you do not have all of this spell's reagents.");
      return;
    endif
  elseif((the_item.objtype == 0x1f14) || (the_item.objtype == 0x1f15))
    CreateRunebook(who, the_item);
    return;
  else
    SendSysMessage(who, "You can't inscribe that!");
  endif

endprogram

function CreateRunebook(who, the_item)
  SendSysMessage(who,"target the scrolls you wish to make the book out of. [needs 8]");
  var scrolls := Target(who);
  if(!scrolls)
    SendSysMessage(who,"cancelled.");
    return;
  endif
  if(!can_access(who, scrolls))
    return;
  endif
  if(!ReserveItem(scrolls))
    return;
  endif
  if(scrolls.objtype != 0xe34)
    SendSysMessage(who,"those are not blank scrolls.");
    return;
  endif
  if(scrolls.amount < 8)
    SendSysMessage(who,"there are not enough blank scrolls for that.");
    return;
  endif
  SendSysMessage(who,"target a recall scroll. [needs 1]");
  var recall := Target(who);
  if(!recall)
    SendSysMessage(who,"cancelled.");
    return;
  endif
  if(!can_access(who, recall))
    return;
  endif
  if(!ReserveItem(recall))
    return;
  endif
  if(recall.objtype != 0x1f4c)
    SendSysMessage(who,"that is not a recall scroll.");
    return;
  endif
  SendSysMessage(who,"target a gate scroll. [needs 1]");
  var gate := Target(who);
  if(!gate)
    SendSysMessage(who,"cancelled.");
    return;
  endif
  if(!ReserveItem(gate))
    return;
  endif
  if(!can_access(who, gate))
    return;
  endif
  if(gate.objtype != 0x1f60)
    SendSysMessage(who,"that is not a gate scroll.");
    return;
  endif
  if(CheckSkill(who, SKILLID_INSCRIPTION, 70, 900))
    if(SubtractAmount(the_item, 1) && SubtractAmount(scrolls, 8) && SubtractAmount(recall, 1) && SubtractAmount(gate, 1))
      var myskill := CInt(GetEffectiveSkill(who, SKILLID_CARPENTRY));
      var modpts := 0;
      if(myskill >=  90)
        modpts := (myskill - 80);
      endif
      var rint := RandomInt(100);
      if(modpts >= rint)
        ExceptionalFameMod(who, myskill, 90, 45);
	    PlaySoundEffect(who, 0x24a);
	    SendSysMessage(who, "You create an exceptional runebook.");
        var book := CreateItemInBackpack(who, 0x6100);
        SetObjProperty(book,"charges", 10);
        SetObjProperty(book, "maxcharges", 10);
      else
	    PlaySoundEffect(who, 0x24a);
	    SendSysMessage(who, "You create a runebook.");
        var book := CreateItemInBackpack(who, 0x6100);
        SetObjProperty(book,"charges", 5);
        SetObjProperty(book, "maxcharges", 5);
      endif
    endif
  else
	SendSysMessage(who, "You fail, and destroy the rune");
    SubtractAmount(the_item,1);
  endif
endfunction

function MakeAndProcessMenu(who, spellbook)
    set_priority(1);
    var circles := { };
    foreach spell in EnumerateItemsInContainer(spellbook)
      var elem := FindConfigElem(config_file, spell.objtype);
      var thecircle := GetConfigInt(elem, "circle");
      circles[thecircle] := 1;
    endforeach
    var i;
    var tmenu := CreateMenu("Select a circle to inscribe");
    for (i := 1; i <= 8; i := i + 1)
      if (circles[i] == 1)
        AddMenuItem(tmenu, 0x20bf + i, "Circle " + CStr(i) + " spells");
      endif
    endfor
    var firstchoice:= SelectMenuItem2(who, tmenu);
    if (!firstchoice.index)
      return 0;
    endif
    var tmenu2 := CreateMenu("Select a spell to inscribe");
    foreach spell in EnumerateItemsInContainer(spellbook)
    var elem := FindConfigElem(config_file, spell.objtype);
    var thecircle := GetConfigInt(elem, "circle");
    if (thecircle == firstchoice.objtype - 0x20bf)
      var spellname := GetConfigString(elem, "name");
      var thetype := GetConfigInt(elem, "graphic");
      AddMenuItem(tmenu2, thetype, spellname);
    endif
    endforeach
    var hischoice := SelectMenuItem2(who, tmenu2);
    set_priority(50);
    if (!hischoice.index)
      return 0;
    else
      return hischoice.objtype;
    endif
endfunction

function usemana(who, circle)
  var umana;
  case (circle)
    1: umana :=   4;
    2: umana :=   6;
    3: umana :=   9;
    4: umana :=  11;
    5: umana :=  14;
    6: umana :=  20;
    7: umana :=  40;
    8: umana :=  50;
  endcase
  if(GetMana(who) >= umana)
    return umana;
  else
    return 0;
  endif
endfunction

function ListRootItemsInContainer(container)
  var ret := { };
  foreach item in EnumerateItemsInContainer(container)
    if (item.container.serial == container.serial)
	  ret.append(item);
    endif
  endforeach
  return ret;
endfunction

function ExceptionalFameMod(who, skill, diff, points)
  if(skill > diff - 20)
    diff := diff + 20;
    if((skill - diff) <= 5)
      points := points;
    elseif((skill - diff) <= 10)
      points := (points * 3) / 4;
    elseif((skill - diff) <= 15)
      points := points / 2;
    elseif((skill - diff) <= 20)
      points := points / 4;
    else
      points := 0;
    endif
    points := Cint(points);
    var fame := Cint(GetObjProperty(who, "Fame"));
    var famegain := fame + points;
    SetObjProperty(who, "Fame", famegain);
    var msgtext := "You have ";
    if(points < 0)
      msgtext := msgtext + "lost ";
      points := Abs(points);
    else
      msgtext := msgtext + "gained ";
    endif
    if(points > 150)
      msgtext := msgtext + "a great amount of ";
    elseif(points > 125)
      msgtext := msgtext + "alot of ";
    elseif(points > 75)
      msgtext := msgtext + "a good amount of ";
    elseif(points > 30)
      msgtext := msgtext + "some ";
    elseif(points > 0)
      msgtext := msgtext + "a little ";
    else
      return 0;
    endif
    msgtext := msgtext + "Fame.";
    SendSysMessage(who, msgtext);
    var karma := Cint(GetObjProperty(who, "Karma"));
    var kmod := GetKarmaLevel(karma);
    var fmod := GetFameLevel(famegain);
    var newtitle := nototitles[ (kmod) ];
    newtitle := "The " + CStr(newtitle[fmod]) + " ";
    if(newtitle["None"])
      newtitle := "";
    endif
    if(fmod == 5)
      if(who.gender == 1)
        newtitle := newtitle + "Lady ";
      else
        newtitle := newtitle + "Lord ";
      endif
    endif
    if(newtitle != who.title_prefix)
      who.title_prefix := newtitle;
      SendSysMessage(who, "you are now known as " + newtitle + who.name);
    endif
    SetNotoTitle(who, karma, fame);
  endif
endfunction