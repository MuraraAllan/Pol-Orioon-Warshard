use uo;
use basic;
use os;

include "include/attributes";

program textcmd_getprop( who, propname )

	SendSysMessage( who, "Selecione o objeto.",0x9,90 );
	var obj := Target(who);
	if( !obj )
		return 0;
	endif
	
	if( obj.IsA(POLCLASS_MOBILE) )
		ProcessMobileGetProp( who, obj, propname );
	else
		ProcessItemGetProp( who, obj, propname );
	endif

endprogram


function ProcessMobileGetProp( who, mobile, propname )

	var value := GetMobileProp( mobile, propname );
	if( !value )
		SendSysmessage( who, "Prop Name Invalida!",0x9,90 );
	else
		SendSysmessage( who, propname + ": " + value );
	endif

endfunction


function ProcessItemGetProp( who, item, propname )

	var value := GetItemProp( item, propname );
	if( !value )
		SendSysmessage( who, "Invalid prop name!" );
	else
		SendSysmessage( who, propname + ": " + value );
	endif

endfunction


function GetMobileProp( mobile, propname )

	var retstr;
	case( propname )
		"x": 		retstr := mobile.x;			break;
		"y": 		retstr := mobile.y;			break;
		"z": 		retstr := mobile.z;			break;
		"objtype": 	retstr := Hex(mobile.objtype);		break;
		"color": 	retstr := mobile.color;			break;
		"serial": 	retstr := Hex(mobile.serial);		break;
		"height": 	retstr := mobile.height;		break;
		"weight":	retstr := mobile.weight;		break;
		"facing": 	retstr := mobile.facing;		break;
		"name":		retstr := mobile.name;			break;
		"warmode":	retstr := mobile.warmode;		break;
		"gender":	retstr := mobile.gender;		break;
		"truecolor":	retstr := mobile.truecolor;		break;
		"hp":		retstr := GetHp(mobile);		break;
		"maxhp":	retstr := GetMaxHp(mobile);		break;
		"mana":		retstr := GetMana(mobile);		break;
		"maxmana":	retstr := GetMaxMana(mobile);		break;
		"stamina":	retstr := GetStamina(mobile);		break;
		"maxstamina":	retstr := GetMaxStamina(mobile);	break;
		"strength":	retstr := GetStrength(mobile);		break;
		"dexterity":	retstr := GetDexterity(mobile);		break;
		"intelligence":	retstr := GetIntelligence(mobile);	break;
		"dead":		retstr := mobile.dead;			break;
		"ar":		retstr := mobile.ar;			break;
		"strmod":	retstr := GetStrengthMod(mobile);	break;
		"intmod":	retstr := GetIntelligenceMod(mobile);	break;
		"dexmod":	retstr := GetDexterityMod(mobile);	break;
		"armod":	retstr := mobile.ar_mod;		break;
		"graphic":	retstr := mobile.graphic;		break;
		"trueobjtype":	retstr := mobile.trueobjtype;		break;
		"poisoned":	retstr := mobile.poisoned;		break;
		"paralyzed":	retstr := mobile.paralyzed;		break;
		"hidden":	retstr := mobile.hidden;		break;
		"concealed":	retstr := mobile.concealed;		break;
		"frozen":	retstr := mobile.frozen;		break;
		"stealthsteps":	retstr := mobile.stealthsteps;		break;
		"squelched":	retstr := mobile.squelched;		break;
		"title_guild":	retstr := mobile.title_guild;		break;
		"title_prefix":	retstr := mobile.title_prefix;		break;
		"title_suffix":	retstr := mobile.title_suffix;		break;
		"title_race":	retstr := mobile.title_race;		break;
		"criminal":	retstr := mobile.criminal;		break;
		"murderer":	retstr := mobile.murderer;		break;
		default:	retstr := error;
	endcase

	if( retstr != error )
		return Cstr(retstr);
	else
		return retstr;
	endif

endfunction


function GetItemProp( item, propname )

	var retstr;
	case( propname )
		"x": 		retstr := item.x;		break;
		"y": 		retstr := item.y;		break;
		"z": 		retstr := item.z;		break;
		"objtype": 	retstr := Hex(item.objtype);	break;
		"color": 	retstr := item.color;		break;
		"serial": 	retstr := Hex(item.serial);	break;
		"height": 	retstr := item.height;		break;
		"weight":	retstr := item.weight;		break;
		"facing": 	retstr := item.facing;		break;
		"name":		retstr := item.name;		break;
		"desc":		retstr := item.desc;		break;
		"hp":		retstr := item.hp;		break;
		"ar_mod":	retstr := item.ar_mod;		break;
		"graphic":	retstr := item.graphic;		break;
		"usescript":	retstr := item.usescript;	break;
		"equipscript":	retstr := item.equipscript;	break;
		"unequipscript": retstr := item.unequipscript;	break;
		"item_count":	retstr := item.item_count;	break;
		"newbie":	retstr := item.newbie;		break;
		"movable":	retstr := item.movable;		break;
		"decayat":	retstr := item.decayat;		break;
		"maxhp_mod":	retstr := item.maxhp_mod;	break;
		"quality":	retstr := item.quality;		break;
		"ar_base":	retstr := item.ar_base;		break;
		"hitscript":	retstr := item.hitscript;	break;
		"dmg_mod":	retstr := item.dmg_mod;		break;
		"skillid":	retstr := item.skillid;		break;
		"script":	retstr := item.script;		break;
		"controlscript": retstr := item.controlscript;	break;
		"walkonscript":	retstr := item.walkonscript;	break;
		"invisible":	retstr := item.invisible;	break;
		"buyprice":	retstr := item.buyprice;	break;
		default:	retstr := error;
	endcase

	if( retstr != error )
		return Cstr(retstr);
	else
		return retstr;
	endif

endfunction